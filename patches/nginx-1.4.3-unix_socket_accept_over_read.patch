--- a/src/event/ngx_event_accept.c      Tue Oct 08 16:07:14 2013 +0400
+++ b/src/event/ngx_event_accept.c      Mon Oct 14 10:34:13 2013 +0100
@@ -269,19 +269,31 @@ ngx_event_accept(ngx_event_t *ev)
 #endif

         if (ls->addr_ntop) {
-            c->addr_text.data = ngx_pnalloc(c->pool, ls->addr_text_max_len);
-            if (c->addr_text.data == NULL) {
-                ngx_close_accepted_connection(c);
-                return;
-            }
+            if (socklen > sizeof(c->sockaddr->sa_family)) {
+                c->addr_text.data = ngx_pnalloc(c->pool, ls->addr_text_max_len);
+                if (c->addr_text.data == NULL) {
+                    ngx_close_accepted_connection(c);
+                    return;
+                }

-            c->addr_text.len = ngx_sock_ntop(c->sockaddr, c->addr_text.data,
-                                             ls->addr_text_max_len, 0);
-            if (c->addr_text.len == 0) {
-                ngx_close_accepted_connection(c);
-                return;
-            }
-        }
+                c->addr_text.len = ngx_sock_ntop(c->sockaddr, c->addr_text.data,
+                                                 ls->addr_text_max_len, 0);
+                if (c->addr_text.len == 0) {
+                    ngx_close_accepted_connection(c);
+                    return;
+                }
+
+            } else {
+                /*
+                 * Linux accept/accept4 syscalls, for example, do not return
+                 * address data upon unix domain sockets
+                 */
+                c->addr_text.data = NULL;
+                c->addr_text.len = 0;
+             }
+         }
+
+

 #if (NGX_DEBUG)
         {

