--- a/src/os/unix/ngx_channel.c Tue Oct 08 16:07:14 2013 +0400
+++ b/src/os/unix/ngx_channel.c Mon Oct 14 10:09:23 2013 +0100
@@ -31,6 +31,8 @@ ngx_write_channel(ngx_socket_t s, ngx_ch
         msg.msg_controllen = 0;

     } else {
+       ngx_memzero(&cmsg, sizeof(cmsg));
+
         msg.msg_control = (caddr_t) &cmsg;
         msg.msg_controllen = sizeof(cmsg);

--- a/src/os/unix/ngx_process_cycle.c   Tue Oct 08 16:07:14 2013 +0400
+++ b/src/os/unix/ngx_process_cycle.c   Mon Oct 14 10:14:35 2013 +0100
@@ -355,6 +355,8 @@ ngx_start_worker_processes(ngx_cycle_t *

     ngx_log_error(NGX_LOG_NOTICE, cycle->log, 0, "start worker processes");

+    ngx_memzero(&ch, sizeof(ngx_channel_t));
+
     ch.command = NGX_CMD_OPEN_CHANNEL;

     for (i = 0; i < n; i++) {
@@ -460,6 +462,8 @@ ngx_signal_worker_processes(ngx_cycle_t
     ngx_err_t      err;
     ngx_channel_t  ch;

+    ngx_memzero(&ch, sizeof(ngx_channel_t));
+
 #if (NGX_BROKEN_SCM_RIGHTS)

     ch.command = 0;
@@ -560,6 +564,8 @@ ngx_reap_children(ngx_cycle_t *cycle)
     ngx_uint_t        live;
     ngx_channel_t     ch;
     ngx_core_conf_t  *ccf;
+
+    ngx_memzero(&ch, sizeof(ngx_channel_t));

     ch.command = NGX_CMD_CLOSE_CHANNEL;
     ch.fd = -1;

